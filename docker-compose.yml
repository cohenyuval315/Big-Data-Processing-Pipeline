version: "1.0"
services:

  cassandra-db:
    container_name: cassandra
    build:
      context: ./PricePrediction/cassandra_cluster
      dockerfile: ./Dockerfile     
    # network_mode: "host" 
    networks:
      - everything
      # - cassandra
    ports:
      - 7000:7000
      - 7199:7199
      - 9042:9042

  # zookeeper:
  #   image: 'bitnami/zookeeper:latest'
  #   container_name: zookeeper
  #   hostname: zookeeper    
  #   network_mode: "host"
  #   # networks:
  #   #   - everything
  #     # - kafkanet
  #     # - cassandra      
  #   ports:
  #     - 2181:2181
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes

  # kafka:
  #   image: 'bitnami/kafka:latest'
  #   container_name: kafka
  #   network_mode: "host"
  #   # networks:
  #   #   - everything
  #     # - kafkanet
  #     # - cassandra
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 9092:9092
  #   environment:
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     - KAFKA_CFG_LOG_DIRS=/tmp/kafka_mounts/logs


  # kafka-connect:
  #   image: 'bitnami/kafka:latest'
  #   container_name: kafka_connect
  #   # networks:
  #   #   - everything
  #   network_mode: "host"
  #   ports:
  #     - 8083:8083
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   command: /opt/bitnami/kafka/bin/connect-distributed.sh /opt/bitnami/kafka/config/connect-distributed.properties


  # sources-1:
  #   container_name: sources-1
  #   build:
  #     context: ./PricePrediction/data_sources
  #     dockerfile: ./Dockerfile    
  #   # depends_on:
  #     # - kafka
  #   network_mode: "host"
  #   # networks:
  #   #   - everything
  #     # - kafkanet


  # spark-master:
  #   container_name: spark-master
  #   image: bitnami/spark:latest
  #   command: bin/spark-class org.apache.spark.deploy.master.Master
  #   network_mode: "host"
  #   ports:
  #     - 9090:8080
  #     - 7077:7077


  # spark-worker-1:
  #   container_name: spark-worker-1
  #   image: bitnami/spark:latest
  #   command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
  #   network_mode: "host"
  #   depends_on:
  #     - spark-master
  #   environment:
  #     - SPARK_MODE:worker
  #     - SPARK_WORKER_CORES:2
  #     - SPARK_WORKER_MEMORY:2g
  #     - SPARK_MASTER_URL:spark://spark-master:7077
    # networks:
    #   - everything


  web-server:
    container_name: web-server
    build:
      context: ./PricePrediction/web_server
      dockerfile: ./Dockerfile  
    # network_mode: "host"
    networks:
      - everything
      # - application
      # - cassandra
    depends_on:
      - cassandra-db
    ports:
      - 7676:7676


  web-client: 
    container_name: web-client
    build:
      context: ./PricePrediction/web_client
      dockerfile: ./Dockerfile
    # network_mode: "host"
    networks:
      - everything
      # - application
    depends_on:
      - web-server      
    ports:
    - 8050:8050


networks:
  everything:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"

  # kafkanet:
  #   driver: bridge
  #   driver_opts:
  #     com.docker.network.bridge.enable_icc: "true"
      
  # application:
  #   driver: bridge
  #   driver_opts:
  #     com.docker.network.bridge.enable_icc: "true"
      
  # cassandra:
  #   driver: bridge
  #   driver_opts:
  #     com.docker.network.bridge.enable_icc: "true"      

  # spark:
  #   driver: bridge
  #   driver_opts:
  #     com.docker.network.bridge.enable_icc: "true"   